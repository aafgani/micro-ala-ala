@{
    ViewData["Title"] = "Unauthorized";
    var headers = Context.Request.Headers;
    var user = Context.User;
    bool isAuthenticated = user?.Identity?.IsAuthenticated ?? false;
    var claims = user?.Claims?.ToList() ?? new List<Claim>();
}

<h2>Unauthorized</h2>
<p>
    @if (isAuthenticated)
    {
        <span>You are logged in</span>
    }
    else
    {
        <span>You are not logged in.</span>
    }
</p>

@if (isAuthenticated && claims.Any())
{
    <h3>User Claims</h3>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Type</th>
                <th>Value</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var claim in claims)
        {
            <tr>
                <td>@claim.Type</td>
                <td>@claim.Value</td>
            </tr>
        }
        </tbody>
    </table>
}

<h3>Request Headers</h3>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Header</th>
            <th>Value</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var header in headers)
    {
        <tr>
            <td>@header.Key</td>
            <td>@string.Join(", ", header.Value)</td>
        </tr>
    }
    </tbody>
</table>